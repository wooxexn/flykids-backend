name: Deploy to EC2

on:
  push:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # 1. 소스 체크아웃
      - name: Checkout source
        uses: actions/checkout@v3

      # 2. SSH 키 설정
      - name: Set up SSH key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.EC2_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.EC2_HOST }} >> ~/.ssh/known_hosts

      # 3. JAR 빌드 (테스트 제외)
      - name: Build JAR
        run: |
          chmod +x ./gradlew
          ./gradlew clean build -x test

      # 4. JAR 확인용 디버그
      - name: Check JAR exists
        run: ls -al build/libs/

      # 5. SSH 접속 디버그 (선택적)
      - name: Debug SSH connection
        run: |
          ssh -o StrictHostKeyChecking=no \
            ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} "echo SSH Connection OK"

      # 6. 배포 (scp & 원격 실행)
      - name: Deploy to EC2
        run: |
          scp -o StrictHostKeyChecking=no build/libs/*.jar \
            ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }}:/home/${{ secrets.EC2_USER }}/app.jar
          ssh -o StrictHostKeyChecking=no ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} "
            pkill -f 'java -jar' || true
            nohup java -jar /home/${{ secrets.EC2_USER }}/app.jar > app.log 2>&1 &
          "